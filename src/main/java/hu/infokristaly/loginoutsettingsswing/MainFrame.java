/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hu.infokristaly.loginoutsettingsswing;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.stream.JsonReader;
import java.awt.Dialog;
import java.awt.Rectangle;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortException;
import jssc.SerialPortList;

/**
 *
 * @author pzoli
 */
public class MainFrame extends javax.swing.JFrame implements jssc.SerialPortEventListener {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    public final int BROWSE_EEPROM = 0;
    public final int NEW_EEPROM_ITEM = 1;
    public final int MODIFY_EEPROM_ITEM = 2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cbxSerialPortList = new javax.swing.JComboBox<>();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnListCards = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEEPROMTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panEEPROM = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtIndex = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        edtSysName = new javax.swing.JTextField();
        edtUID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbxPlatform = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        edtSectorPassword = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnWriteCardData = new javax.swing.JButton();
        btnEraseCard = new javax.swing.JButton();
        btnReadCard = new javax.swing.JButton();
        btnDumpCard = new javax.swing.JButton();
        edtSystemPassword = new javax.swing.JPasswordField();
        edtSectorPasswordForCard = new javax.swing.JPasswordField();
        tbtnSetMode = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setText("Port:");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnDisconnect.setText("Disconnect");
        btnDisconnect.setEnabled(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane2.setViewportView(txtLog);

        jLabel4.setText("Log");

        btnListCards.setText("List cards");
        btnListCards.setEnabled(false);
        btnListCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListCardsActionPerformed(evt);
            }
        });

        tblEEPROMTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "Name", "UID", "Platform"
            }
        ));
        tblEEPROMTable.setEnabled(false);
        tblEEPROMTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblEEPROMTable);

        panEEPROM.setEnabled(false);

        jLabel1.setText("Index:");

        edtIndex.setEditable(false);
        edtIndex.setEnabled(false);

        jLabel3.setText("System name:");

        edtSysName.setEnabled(false);

        edtUID.setEnabled(false);

        jLabel5.setText("UID:");

        jLabel6.setText("Platform:");

        cbxPlatform.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Windows", "Gnome", "KDE" }));
        cbxPlatform.setEnabled(false);

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel7.setText("Sector password:");

        btnNew.setText("New");
        btnNew.setEnabled(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnModify.setText("Modify");
        btnModify.setEnabled(false);
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        edtSectorPassword.setEnabled(false);

        javax.swing.GroupLayout panEEPROMLayout = new javax.swing.GroupLayout(panEEPROM);
        panEEPROM.setLayout(panEEPROMLayout);
        panEEPROMLayout.setHorizontalGroup(
            panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEEPROMLayout.createSequentialGroup()
                .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panEEPROMLayout.createSequentialGroup()
                            .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(panEEPROMLayout.createSequentialGroup()
                                    .addComponent(edtIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3))
                                .addComponent(edtUID, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(edtSysName, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panEEPROMLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbxPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(panEEPROMLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edtSectorPassword)
                            .addGap(242, 242, 242)))
                    .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panEEPROMLayout.createSequentialGroup()
                            .addGap(224, 224, 224)
                            .addComponent(btnModify)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panEEPROMLayout.createSequentialGroup()
                            .addComponent(btnDelete)
                            .addGap(75, 75, 75)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(242, 242, 242))))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        panEEPROMLayout.setVerticalGroup(
            panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEEPROMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(edtSysName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(edtUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(edtSectorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panEEPROMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnNew)
                    .addComponent(btnModify)
                    .addComponent(btnCancel)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("EEPROM", panEEPROM);

        jLabel8.setText("Password:");

        jLabel9.setText("Sector password:");

        btnWriteCardData.setText("Write card");
        btnWriteCardData.setEnabled(false);
        btnWriteCardData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteCardDataActionPerformed(evt);
            }
        });

        btnEraseCard.setText("Erase card");
        btnEraseCard.setEnabled(false);
        btnEraseCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEraseCardActionPerformed(evt);
            }
        });

        btnReadCard.setText("Read card");
        btnReadCard.setEnabled(false);
        btnReadCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadCardActionPerformed(evt);
            }
        });

        btnDumpCard.setText("Dump  card");
        btnDumpCard.setEnabled(false);
        btnDumpCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDumpCardActionPerformed(evt);
            }
        });

        edtSystemPassword.setEnabled(false);

        edtSectorPasswordForCard.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(edtSystemPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtSectorPasswordForCard)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(btnWriteCardData)
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDumpCard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReadCard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEraseCard)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(edtSystemPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(btnWriteCardData)
                    .addComponent(edtSectorPasswordForCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEraseCard)
                    .addComponent(btnReadCard)
                    .addComponent(btnDumpCard))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Card", jPanel2);

        tbtnSetMode.setText("SetupMode");
        tbtnSetMode.setEnabled(false);
        tbtnSetMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnSetModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxSerialPortList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(tbtnSetMode)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnListCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSerialPortList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnConnect)
                    .addComponent(btnDisconnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListCards)
                    .addComponent(tbtnSetMode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        recordEditorState = BROWSE_EEPROM;
        if (cbxSerialPortList.getSelectedItem() != null) {
            if (serialPort == null) {
                serialPort = new SerialPort(cbxSerialPortList.getSelectedItem().toString());
            }
            if (!serialPort.isOpened()) {
                try {
                    //Open port
                    serialPort.openPort();
                    //We expose the settings. You can also use this line - serialPort.setParams(9600, 8, 1, 0);
                    serialPort.setParams(SerialPort.BAUDRATE_9600,
                            SerialPort.DATABITS_8,
                            SerialPort.STOPBITS_1,
                            SerialPort.PARITY_NONE);
                    int mask = SerialPort.MASK_RXCHAR;
                    serialPort.setEventsMask(mask);
                    serialPort.addEventListener(this);
                    setState();
                } catch (SerialPortException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    serialPort.closePort();
                    setState();
                } catch (SerialPortException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        closeSerialPort();
        DefaultTableModel dtm = (DefaultTableModel) tblEEPROMTable.getModel();
        dtm.setRowCount(0);
        setState();
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeSerialPort();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultCaret caret = (DefaultCaret) txtLog.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        recordEditorState = BROWSE_EEPROM;
        tblEEPROMTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    setState();
                    final DefaultListSelectionModel target = (DefaultListSelectionModel) e.getSource();
                    updateEditorFields(target);
                }
            }
        });
    }//GEN-LAST:event_formWindowOpened

    private void btnListCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListCardsActionPerformed
        try {
            serialPort.writeString("l\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListCardsActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        recordEditorState = MODIFY_EEPROM_ITEM;
        setState();        // TODO add your handling code here:
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        recordEditorState = NEW_EEPROM_ITEM;
        setState();
        DefaultTableModel dtm = (DefaultTableModel) tblEEPROMTable.getModel();
        dtm.setRowCount(dtm.getRowCount() + 1);
        DefaultListSelectionModel target = (DefaultListSelectionModel) tblEEPROMTable.getSelectionModel();
        target.setAnchorSelectionIndex(dtm.getRowCount() - 1);
        tblEEPROMTable.setRowSelectionInterval(dtm.getRowCount() - 1, dtm.getRowCount() - 1);
        tblEEPROMTable.scrollRectToVisible(tblEEPROMTable.getCellRect(tblEEPROMTable.getRowCount() - 1, 0, true));
        updateEditorFields(target);

    }//GEN-LAST:event_btnNewActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (recordEditorState == NEW_EEPROM_ITEM) {
            DefaultTableModel dtm = (DefaultTableModel) tblEEPROMTable.getModel();
            dtm.setRowCount(dtm.getRowCount() - 1);
        }
        recordEditorState = BROWSE_EEPROM;
        setState();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        StringBuilder msg = new StringBuilder(recordEditorState == NEW_EEPROM_ITEM ? "a::" : "w:");
        if (recordEditorState == MODIFY_EEPROM_ITEM) {
            final DefaultListSelectionModel target = (DefaultListSelectionModel) tblEEPROMTable.getSelectionModel();
            int idx = target.getAnchorSelectionIndex();
            msg.append(idx);
            msg.append(":");
        }
        if (edtSysName.getText().length() > 32) {
            JOptionPane.showMessageDialog(null, "System name must less then or equal 32 character!");
            return;
        }
        if (edtUID.getText().length() < 8) {
            JOptionPane.showMessageDialog(null, "The UID must be minimum 8 character!");
            return;
        }
        msg.append(edtSysName.getText());
        msg.append(":");
        if (cbxPlatform.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please choose a platform!");
            return;
        }
        msg.append(cbxPlatform.getSelectedItem().toString().substring(0, 1).toLowerCase());
        msg.append(":");
        msg.append(edtUID.getText());
        if (!edtSectorPassword.getText().isBlank()) {
            if (edtSectorPassword.getText().length() == 6) {
                msg.append(":");
                msg.append(edtSectorPassword.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Sector password length must exactly be 6 character or empty!");
                return;
            }
        }
        try {
            serialPort.writeString(msg + "\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        recordEditorState = BROWSE_EEPROM;
        setState();        // TODO add your handling code here:
        btnListCardsActionPerformed(null);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        final DefaultListSelectionModel target = (DefaultListSelectionModel) tblEEPROMTable.getSelectionModel();
        int idx = target.getAnchorSelectionIndex();

        String msg = "d:" + idx;
        try {
            serialPort.writeString(msg + "\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnListCardsActionPerformed(null);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnWriteCardDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteCardDataActionPerformed
        StringBuilder msg = new StringBuilder("cw:");
        if (edtSystemPassword.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Password must not empty!");
            return;            
        } else if (edtSystemPassword.getText().length()>16) {
            JOptionPane.showMessageDialog(null, "Password length must less then or equal 16 character!");
            return;                        
        }
        msg.append(edtSystemPassword.getText());

        if (!edtSectorPasswordForCard.getText().isBlank()) {
            if (edtSectorPasswordForCard.getText().length() != 6) {
                JOptionPane.showMessageDialog(null, "Sector password length must exactly be 6 character or empty!");
                return;
            }
            msg.append(":");
            msg.append(edtSectorPasswordForCard.getText());
        }

        try {
            serialPort.writeString(msg.toString() + "\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnWriteCardDataActionPerformed

    private void tbtnSetModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnSetModeActionPerformed
        try {
            serialPort.writeString("setup\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbtnSetModeActionPerformed

    private void btnDumpCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDumpCardActionPerformed
        try {
            serialPort.writeString("dump\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDumpCardActionPerformed

    private void btnReadCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadCardActionPerformed
        try {
            serialPort.writeString("cr\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReadCardActionPerformed

    private void btnEraseCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEraseCardActionPerformed
        try {
            serialPort.writeString("ce\n");
        } catch (SerialPortException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEraseCardActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnDumpCard;
    private javax.swing.JButton btnEraseCard;
    private javax.swing.JButton btnListCards;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReadCard;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnWriteCardData;
    private javax.swing.JComboBox<String> cbxPlatform;
    private javax.swing.JComboBox<String> cbxSerialPortList;
    private javax.swing.JTextField edtIndex;
    private javax.swing.JPasswordField edtSectorPassword;
    private javax.swing.JPasswordField edtSectorPasswordForCard;
    private javax.swing.JTextField edtSysName;
    private javax.swing.JPasswordField edtSystemPassword;
    private javax.swing.JTextField edtUID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panEEPROM;
    private javax.swing.JTable tblEEPROMTable;
    private javax.swing.JToggleButton tbtnSetMode;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables

    private SerialPort serialPort;
    private int recordEditorState = BROWSE_EEPROM;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame form = new MainFrame();
                String[] portNames = SerialPortList.getPortNames();
                for (int i = 0; i < portNames.length; i++) {
                    form.cbxSerialPortList.addItem(new String(portNames[i]));
                }
                form.cbxSerialPortList.addItem("");
                form.setVisible(true);
            }
        });
    }

    private void handleMessage(String line) {
        txtLog.append(line);
        txtLog.append("\n");
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblEEPROMTable.getModel();
            if (line.equals("[]")) {
                dtm.getDataVector().removeAllElements();
                dtm.fireTableDataChanged();
            } else {
                JsonArray jsonArray = new JsonParser().parse(line).getAsJsonArray();
                dtm.setRowCount(jsonArray.size());
                jsonArray.forEach(f -> {
                    tblEEPROMTable.getModel().setValueAt(f.getAsJsonObject().get("idx").getAsByte(), f.getAsJsonObject().get("idx").getAsByte(), 0);
                    tblEEPROMTable.getModel().setValueAt(f.getAsJsonObject().get("sysname").getAsString(), f.getAsJsonObject().get("idx").getAsByte(), 1);
                    tblEEPROMTable.getModel().setValueAt(f.getAsJsonObject().get("uid").getAsString(), f.getAsJsonObject().get("idx").getAsByte(), 2);
                    tblEEPROMTable.getModel().setValueAt(f.getAsJsonObject().get("platform").getAsString(), f.getAsJsonObject().get("idx").getAsByte(), 3);
                });
                DefaultListSelectionModel target = (DefaultListSelectionModel) tblEEPROMTable.getSelectionModel();
                int iSelectedIndex = target.getAnchorSelectionIndex();

                btnDelete.setEnabled((dtm.getRowCount() > 0) && (iSelectedIndex > -1));
            }
        } catch (Exception ex) {
            try {
                JsonObject jsonObject = new JsonParser().parse(line).getAsJsonObject();
                JsonElement action = jsonObject.get("action");
                if (action.getAsString().equals("setup")) {
                    JsonElement mode = jsonObject.get("mode");
                    tbtnSetMode.setSelected((mode != null) && mode.getAsString().equals("card"));
                }
            } catch (Exception e) {

            }
        }
    }

    public void closeSerialPort() {
        if ((serialPort != null) && serialPort.isOpened()) {
            try {
                serialPort.closePort();
            } catch (SerialPortException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private StringBuilder inputBuffer = new StringBuilder();

    public void serialEvent(SerialPortEvent event) {
        if (event.isRXCHAR()) {
            int count = event.getEventValue();
            if (count > 0) {
                try {
                    byte buffer[] = serialPort.readBytes(count);
                    String input = new String(buffer);
                    inputBuffer.append(input);
                    if (inputBuffer.toString().indexOf("\r\n") > -1) {
                        String[] lines = inputBuffer.toString().split("\r\n");
                        int lastIndex = lines.length - (inputBuffer.toString().endsWith("\r\n") ? 0 : 1);
                        for (int i = 0; i < lastIndex; i++) {
                            handleMessage(lines[i]);
                        }
                        if (lastIndex < lines.length) {
                            inputBuffer = new StringBuilder(lines[lines.length - 1]);
                        } else {
                            inputBuffer = new StringBuilder();
                        }
                    }
                } catch (SerialPortException ex) {
                    System.out.println(ex);
                }
            }
        }
    }

    public void updateEditorFields(DefaultListSelectionModel target) {
        int iSelectedIndex = target.getAnchorSelectionIndex();
        if (iSelectedIndex > -1) {
            edtIndex.setText(String.valueOf(iSelectedIndex));
            Object sysName = tblEEPROMTable.getModel().getValueAt(iSelectedIndex, 1);
            edtSysName.setText(sysName != null ? sysName.toString() : "");
            Object uid = tblEEPROMTable.getModel().getValueAt(iSelectedIndex, 2);
            edtUID.setText(uid != null ? uid.toString() : "");
            Object platformObj = tblEEPROMTable.getModel().getValueAt(iSelectedIndex, 3);
            cbxPlatform.setSelectedIndex(platformObj != null ? indexOfPlatformChar(platformObj.toString()) : -1);
        } else {
            edtIndex.setText("");
            edtSysName.setText("");
            edtUID.setText("");
        }
        edtSectorPassword.setText("");

    }

    public int indexOfPlatformChar(String p) {
        int result = -1;
        for (int i = 0; i < cbxPlatform.getItemCount(); i++) {
            if (cbxPlatform.getItemAt(i).toLowerCase().startsWith(p)) {
                result = i;
                break;
            }
        }
        return result;
    }

    public void setState() {
        boolean b = serialPort.isOpened();
        DefaultTableModel dtm = (DefaultTableModel) tblEEPROMTable.getModel();
        DefaultListSelectionModel target = (DefaultListSelectionModel) tblEEPROMTable.getSelectionModel();
        int iSelectedIndex = target.getAnchorSelectionIndex();

        btnConnect.setEnabled(!b);
        panEEPROM.setEnabled(b);
        tbtnSetMode.setEnabled(b);
        btnDisconnect.setEnabled(b);
        btnListCards.setEnabled(b);
        btnCancel.setEnabled(b && recordEditorState > BROWSE_EEPROM);
        btnSave.setEnabled(b && recordEditorState > BROWSE_EEPROM);
        btnModify.setEnabled(b && (recordEditorState == BROWSE_EEPROM) && (dtm.getRowCount() > 0) && (iSelectedIndex > -1));
        btnNew.setEnabled(b && recordEditorState == BROWSE_EEPROM);

        btnDelete.setEnabled(b && (recordEditorState == BROWSE_EEPROM) && (dtm.getRowCount() > 0) && (iSelectedIndex > -1));

        edtSystemPassword.setEnabled(b);
        edtSectorPasswordForCard.setEnabled(b);
        btnWriteCardData.setEnabled(b);

        tblEEPROMTable.setEnabled(b && recordEditorState == BROWSE_EEPROM);
        edtSectorPassword.setEnabled(recordEditorState > BROWSE_EEPROM);
        edtSysName.setEnabled(recordEditorState > BROWSE_EEPROM);
        edtUID.setEnabled(recordEditorState > BROWSE_EEPROM);
        cbxPlatform.setEnabled(recordEditorState > BROWSE_EEPROM);

        edtSystemPassword.setEnabled(b);
        edtSectorPasswordForCard.setEnabled(b);
        btnWriteCardData.setEnabled(b);
        btnDumpCard.setEnabled(b);
        btnReadCard.setEnabled(b);
        btnEraseCard.setEnabled(b);
    }

}
